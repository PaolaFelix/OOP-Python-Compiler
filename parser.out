Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> stmt_list
Rule 2     stmt_list -> stmt stmt_list
Rule 3     stmt_list -> stmt
Rule 4     stmt -> CLASS ID COLON NEWLINE block
Rule 5     stmt -> DEF method_name LPAREN param_list RPAREN COLON NEWLINE block
Rule 6     stmt -> ID EQUALS expr NEWLINE
Rule 7     stmt -> ID DOT ID EQUALS expr NEWLINE
Rule 8     stmt -> SELF DOT ID EQUALS expr NEWLINE
Rule 9     stmt -> ID DOT ID LPAREN arg_list RPAREN NEWLINE
Rule 10    stmt -> ID LPAREN arg_list RPAREN NEWLINE
Rule 11    stmt -> RETURN expr NEWLINE
Rule 12    stmt -> RETURN NEWLINE
Rule 13    stmt -> PASS NEWLINE
Rule 14    method_name -> ID
Rule 15    method_name -> INIT
Rule 16    param_list -> <empty>
Rule 17    param_list -> SELF
Rule 18    param_list -> SELF COMMA params
Rule 19    param_list -> params
Rule 20    params -> ID COMMA params
Rule 21    params -> ID
Rule 22    expr -> expr binary_op expr
Rule 23    expr -> term
Rule 24    term -> ID LPAREN arg_list RPAREN
Rule 25    expr -> ID LPAREN arg_list RPAREN
Rule 26    term -> SELF DOT ID
Rule 27    term -> ID DOT ID
Rule 28    term -> ID
Rule 29    term -> NUMBER
Rule 30    term -> STRING
Rule 31    term -> LPAREN expr RPAREN
Rule 32    binary_op -> PLUS
Rule 33    binary_op -> MINUS
Rule 34    binary_op -> MUL
Rule 35    binary_op -> DIV
Rule 36    arg_list -> <empty>
Rule 37    arg_list -> expr COMMA arg_list
Rule 38    arg_list -> expr
Rule 39    block -> INDENT stmt_list DEDENT

Terminals, with rules where they appear

CLASS                : 4
COLON                : 4 5
COMMA                : 18 20 37
DEDENT               : 39
DEF                  : 5
DIV                  : 35
DOT                  : 7 8 9 26 27
EQUALS               : 6 7 8
ID                   : 4 6 7 7 8 9 9 10 14 20 21 24 25 26 27 27 28
INDENT               : 39
INIT                 : 15
LPAREN               : 5 9 10 24 25 31
MINUS                : 33
MUL                  : 34
NEWLINE              : 4 5 6 7 8 9 10 11 12 13
NUMBER               : 29
PASS                 : 13
PLUS                 : 32
RETURN               : 11 12
RPAREN               : 5 9 10 24 25 31
SELF                 : 8 17 18 26
STRING               : 30
error                : 

Nonterminals, with rules where they appear

arg_list             : 9 10 24 25 37
binary_op            : 22
block                : 4 5
expr                 : 6 7 8 11 22 22 31 37 38
method_name          : 5
param_list           : 5
params               : 18 19 20
program              : 0
stmt                 : 2 3
stmt_list            : 1 2 39
term                 : 23

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . stmt_list
    (2) stmt_list -> . stmt stmt_list
    (3) stmt_list -> . stmt
    (4) stmt -> . CLASS ID COLON NEWLINE block
    (5) stmt -> . DEF method_name LPAREN param_list RPAREN COLON NEWLINE block
    (6) stmt -> . ID EQUALS expr NEWLINE
    (7) stmt -> . ID DOT ID EQUALS expr NEWLINE
    (8) stmt -> . SELF DOT ID EQUALS expr NEWLINE
    (9) stmt -> . ID DOT ID LPAREN arg_list RPAREN NEWLINE
    (10) stmt -> . ID LPAREN arg_list RPAREN NEWLINE
    (11) stmt -> . RETURN expr NEWLINE
    (12) stmt -> . RETURN NEWLINE
    (13) stmt -> . PASS NEWLINE

    CLASS           shift and go to state 4
    DEF             shift and go to state 6
    ID              shift and go to state 5
    SELF            shift and go to state 7
    RETURN          shift and go to state 8
    PASS            shift and go to state 9

    program                        shift and go to state 1
    stmt_list                      shift and go to state 2
    stmt                           shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> stmt_list .

    $end            reduce using rule 1 (program -> stmt_list .)


state 3

    (2) stmt_list -> stmt . stmt_list
    (3) stmt_list -> stmt .
    (2) stmt_list -> . stmt stmt_list
    (3) stmt_list -> . stmt
    (4) stmt -> . CLASS ID COLON NEWLINE block
    (5) stmt -> . DEF method_name LPAREN param_list RPAREN COLON NEWLINE block
    (6) stmt -> . ID EQUALS expr NEWLINE
    (7) stmt -> . ID DOT ID EQUALS expr NEWLINE
    (8) stmt -> . SELF DOT ID EQUALS expr NEWLINE
    (9) stmt -> . ID DOT ID LPAREN arg_list RPAREN NEWLINE
    (10) stmt -> . ID LPAREN arg_list RPAREN NEWLINE
    (11) stmt -> . RETURN expr NEWLINE
    (12) stmt -> . RETURN NEWLINE
    (13) stmt -> . PASS NEWLINE

    $end            reduce using rule 3 (stmt_list -> stmt .)
    DEDENT          reduce using rule 3 (stmt_list -> stmt .)
    CLASS           shift and go to state 4
    DEF             shift and go to state 6
    ID              shift and go to state 5
    SELF            shift and go to state 7
    RETURN          shift and go to state 8
    PASS            shift and go to state 9

    stmt                           shift and go to state 3
    stmt_list                      shift and go to state 10

state 4

    (4) stmt -> CLASS . ID COLON NEWLINE block

    ID              shift and go to state 11


state 5

    (6) stmt -> ID . EQUALS expr NEWLINE
    (7) stmt -> ID . DOT ID EQUALS expr NEWLINE
    (9) stmt -> ID . DOT ID LPAREN arg_list RPAREN NEWLINE
    (10) stmt -> ID . LPAREN arg_list RPAREN NEWLINE

    EQUALS          shift and go to state 12
    DOT             shift and go to state 13
    LPAREN          shift and go to state 14


state 6

    (5) stmt -> DEF . method_name LPAREN param_list RPAREN COLON NEWLINE block
    (14) method_name -> . ID
    (15) method_name -> . INIT

    ID              shift and go to state 16
    INIT            shift and go to state 17

    method_name                    shift and go to state 15

state 7

    (8) stmt -> SELF . DOT ID EQUALS expr NEWLINE

    DOT             shift and go to state 18


state 8

    (11) stmt -> RETURN . expr NEWLINE
    (12) stmt -> RETURN . NEWLINE
    (22) expr -> . expr binary_op expr
    (23) expr -> . term
    (25) expr -> . ID LPAREN arg_list RPAREN
    (24) term -> . ID LPAREN arg_list RPAREN
    (26) term -> . SELF DOT ID
    (27) term -> . ID DOT ID
    (28) term -> . ID
    (29) term -> . NUMBER
    (30) term -> . STRING
    (31) term -> . LPAREN expr RPAREN

    NEWLINE         shift and go to state 20
    ID              shift and go to state 22
    SELF            shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    LPAREN          shift and go to state 23

    expr                           shift and go to state 19
    term                           shift and go to state 21

state 9

    (13) stmt -> PASS . NEWLINE

    NEWLINE         shift and go to state 27


state 10

    (2) stmt_list -> stmt stmt_list .

    $end            reduce using rule 2 (stmt_list -> stmt stmt_list .)
    DEDENT          reduce using rule 2 (stmt_list -> stmt stmt_list .)


state 11

    (4) stmt -> CLASS ID . COLON NEWLINE block

    COLON           shift and go to state 28


state 12

    (6) stmt -> ID EQUALS . expr NEWLINE
    (22) expr -> . expr binary_op expr
    (23) expr -> . term
    (25) expr -> . ID LPAREN arg_list RPAREN
    (24) term -> . ID LPAREN arg_list RPAREN
    (26) term -> . SELF DOT ID
    (27) term -> . ID DOT ID
    (28) term -> . ID
    (29) term -> . NUMBER
    (30) term -> . STRING
    (31) term -> . LPAREN expr RPAREN

    ID              shift and go to state 22
    SELF            shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    LPAREN          shift and go to state 23

    expr                           shift and go to state 29
    term                           shift and go to state 21

state 13

    (7) stmt -> ID DOT . ID EQUALS expr NEWLINE
    (9) stmt -> ID DOT . ID LPAREN arg_list RPAREN NEWLINE

    ID              shift and go to state 30


state 14

    (10) stmt -> ID LPAREN . arg_list RPAREN NEWLINE
    (36) arg_list -> .
    (37) arg_list -> . expr COMMA arg_list
    (38) arg_list -> . expr
    (22) expr -> . expr binary_op expr
    (23) expr -> . term
    (25) expr -> . ID LPAREN arg_list RPAREN
    (24) term -> . ID LPAREN arg_list RPAREN
    (26) term -> . SELF DOT ID
    (27) term -> . ID DOT ID
    (28) term -> . ID
    (29) term -> . NUMBER
    (30) term -> . STRING
    (31) term -> . LPAREN expr RPAREN

    RPAREN          reduce using rule 36 (arg_list -> .)
    ID              shift and go to state 22
    SELF            shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    LPAREN          shift and go to state 23

    arg_list                       shift and go to state 31
    expr                           shift and go to state 32
    term                           shift and go to state 21

state 15

    (5) stmt -> DEF method_name . LPAREN param_list RPAREN COLON NEWLINE block

    LPAREN          shift and go to state 33


state 16

    (14) method_name -> ID .

    LPAREN          reduce using rule 14 (method_name -> ID .)


state 17

    (15) method_name -> INIT .

    LPAREN          reduce using rule 15 (method_name -> INIT .)


state 18

    (8) stmt -> SELF DOT . ID EQUALS expr NEWLINE

    ID              shift and go to state 34


state 19

    (11) stmt -> RETURN expr . NEWLINE
    (22) expr -> expr . binary_op expr
    (32) binary_op -> . PLUS
    (33) binary_op -> . MINUS
    (34) binary_op -> . MUL
    (35) binary_op -> . DIV

    NEWLINE         shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MUL             shift and go to state 39
    DIV             shift and go to state 40

    binary_op                      shift and go to state 36

state 20

    (12) stmt -> RETURN NEWLINE .

    CLASS           reduce using rule 12 (stmt -> RETURN NEWLINE .)
    DEF             reduce using rule 12 (stmt -> RETURN NEWLINE .)
    ID              reduce using rule 12 (stmt -> RETURN NEWLINE .)
    SELF            reduce using rule 12 (stmt -> RETURN NEWLINE .)
    RETURN          reduce using rule 12 (stmt -> RETURN NEWLINE .)
    PASS            reduce using rule 12 (stmt -> RETURN NEWLINE .)
    $end            reduce using rule 12 (stmt -> RETURN NEWLINE .)
    DEDENT          reduce using rule 12 (stmt -> RETURN NEWLINE .)


state 21

    (23) expr -> term .

    NEWLINE         reduce using rule 23 (expr -> term .)
    PLUS            reduce using rule 23 (expr -> term .)
    MINUS           reduce using rule 23 (expr -> term .)
    MUL             reduce using rule 23 (expr -> term .)
    DIV             reduce using rule 23 (expr -> term .)
    COMMA           reduce using rule 23 (expr -> term .)
    RPAREN          reduce using rule 23 (expr -> term .)


state 22

    (25) expr -> ID . LPAREN arg_list RPAREN
    (24) term -> ID . LPAREN arg_list RPAREN
    (27) term -> ID . DOT ID
    (28) term -> ID .

    LPAREN          shift and go to state 41
    DOT             shift and go to state 42
    NEWLINE         reduce using rule 28 (term -> ID .)
    PLUS            reduce using rule 28 (term -> ID .)
    MINUS           reduce using rule 28 (term -> ID .)
    MUL             reduce using rule 28 (term -> ID .)
    DIV             reduce using rule 28 (term -> ID .)
    COMMA           reduce using rule 28 (term -> ID .)
    RPAREN          reduce using rule 28 (term -> ID .)


state 23

    (31) term -> LPAREN . expr RPAREN
    (22) expr -> . expr binary_op expr
    (23) expr -> . term
    (25) expr -> . ID LPAREN arg_list RPAREN
    (24) term -> . ID LPAREN arg_list RPAREN
    (26) term -> . SELF DOT ID
    (27) term -> . ID DOT ID
    (28) term -> . ID
    (29) term -> . NUMBER
    (30) term -> . STRING
    (31) term -> . LPAREN expr RPAREN

    ID              shift and go to state 22
    SELF            shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    LPAREN          shift and go to state 23

    expr                           shift and go to state 43
    term                           shift and go to state 21

state 24

    (26) term -> SELF . DOT ID

    DOT             shift and go to state 44


state 25

    (29) term -> NUMBER .

    NEWLINE         reduce using rule 29 (term -> NUMBER .)
    PLUS            reduce using rule 29 (term -> NUMBER .)
    MINUS           reduce using rule 29 (term -> NUMBER .)
    MUL             reduce using rule 29 (term -> NUMBER .)
    DIV             reduce using rule 29 (term -> NUMBER .)
    COMMA           reduce using rule 29 (term -> NUMBER .)
    RPAREN          reduce using rule 29 (term -> NUMBER .)


state 26

    (30) term -> STRING .

    NEWLINE         reduce using rule 30 (term -> STRING .)
    PLUS            reduce using rule 30 (term -> STRING .)
    MINUS           reduce using rule 30 (term -> STRING .)
    MUL             reduce using rule 30 (term -> STRING .)
    DIV             reduce using rule 30 (term -> STRING .)
    COMMA           reduce using rule 30 (term -> STRING .)
    RPAREN          reduce using rule 30 (term -> STRING .)


state 27

    (13) stmt -> PASS NEWLINE .

    CLASS           reduce using rule 13 (stmt -> PASS NEWLINE .)
    DEF             reduce using rule 13 (stmt -> PASS NEWLINE .)
    ID              reduce using rule 13 (stmt -> PASS NEWLINE .)
    SELF            reduce using rule 13 (stmt -> PASS NEWLINE .)
    RETURN          reduce using rule 13 (stmt -> PASS NEWLINE .)
    PASS            reduce using rule 13 (stmt -> PASS NEWLINE .)
    $end            reduce using rule 13 (stmt -> PASS NEWLINE .)
    DEDENT          reduce using rule 13 (stmt -> PASS NEWLINE .)


state 28

    (4) stmt -> CLASS ID COLON . NEWLINE block

    NEWLINE         shift and go to state 45


state 29

    (6) stmt -> ID EQUALS expr . NEWLINE
    (22) expr -> expr . binary_op expr
    (32) binary_op -> . PLUS
    (33) binary_op -> . MINUS
    (34) binary_op -> . MUL
    (35) binary_op -> . DIV

    NEWLINE         shift and go to state 46
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MUL             shift and go to state 39
    DIV             shift and go to state 40

    binary_op                      shift and go to state 36

state 30

    (7) stmt -> ID DOT ID . EQUALS expr NEWLINE
    (9) stmt -> ID DOT ID . LPAREN arg_list RPAREN NEWLINE

    EQUALS          shift and go to state 47
    LPAREN          shift and go to state 48


state 31

    (10) stmt -> ID LPAREN arg_list . RPAREN NEWLINE

    RPAREN          shift and go to state 49


state 32

    (37) arg_list -> expr . COMMA arg_list
    (38) arg_list -> expr .
    (22) expr -> expr . binary_op expr
    (32) binary_op -> . PLUS
    (33) binary_op -> . MINUS
    (34) binary_op -> . MUL
    (35) binary_op -> . DIV

    COMMA           shift and go to state 50
    RPAREN          reduce using rule 38 (arg_list -> expr .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MUL             shift and go to state 39
    DIV             shift and go to state 40

    binary_op                      shift and go to state 36

state 33

    (5) stmt -> DEF method_name LPAREN . param_list RPAREN COLON NEWLINE block
    (16) param_list -> .
    (17) param_list -> . SELF
    (18) param_list -> . SELF COMMA params
    (19) param_list -> . params
    (20) params -> . ID COMMA params
    (21) params -> . ID

    RPAREN          reduce using rule 16 (param_list -> .)
    SELF            shift and go to state 52
    ID              shift and go to state 54

    param_list                     shift and go to state 51
    params                         shift and go to state 53

state 34

    (8) stmt -> SELF DOT ID . EQUALS expr NEWLINE

    EQUALS          shift and go to state 55


state 35

    (11) stmt -> RETURN expr NEWLINE .

    CLASS           reduce using rule 11 (stmt -> RETURN expr NEWLINE .)
    DEF             reduce using rule 11 (stmt -> RETURN expr NEWLINE .)
    ID              reduce using rule 11 (stmt -> RETURN expr NEWLINE .)
    SELF            reduce using rule 11 (stmt -> RETURN expr NEWLINE .)
    RETURN          reduce using rule 11 (stmt -> RETURN expr NEWLINE .)
    PASS            reduce using rule 11 (stmt -> RETURN expr NEWLINE .)
    $end            reduce using rule 11 (stmt -> RETURN expr NEWLINE .)
    DEDENT          reduce using rule 11 (stmt -> RETURN expr NEWLINE .)


state 36

    (22) expr -> expr binary_op . expr
    (22) expr -> . expr binary_op expr
    (23) expr -> . term
    (25) expr -> . ID LPAREN arg_list RPAREN
    (24) term -> . ID LPAREN arg_list RPAREN
    (26) term -> . SELF DOT ID
    (27) term -> . ID DOT ID
    (28) term -> . ID
    (29) term -> . NUMBER
    (30) term -> . STRING
    (31) term -> . LPAREN expr RPAREN

    ID              shift and go to state 22
    SELF            shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    LPAREN          shift and go to state 23

    expr                           shift and go to state 56
    term                           shift and go to state 21

state 37

    (32) binary_op -> PLUS .

    ID              reduce using rule 32 (binary_op -> PLUS .)
    SELF            reduce using rule 32 (binary_op -> PLUS .)
    NUMBER          reduce using rule 32 (binary_op -> PLUS .)
    STRING          reduce using rule 32 (binary_op -> PLUS .)
    LPAREN          reduce using rule 32 (binary_op -> PLUS .)


state 38

    (33) binary_op -> MINUS .

    ID              reduce using rule 33 (binary_op -> MINUS .)
    SELF            reduce using rule 33 (binary_op -> MINUS .)
    NUMBER          reduce using rule 33 (binary_op -> MINUS .)
    STRING          reduce using rule 33 (binary_op -> MINUS .)
    LPAREN          reduce using rule 33 (binary_op -> MINUS .)


state 39

    (34) binary_op -> MUL .

    ID              reduce using rule 34 (binary_op -> MUL .)
    SELF            reduce using rule 34 (binary_op -> MUL .)
    NUMBER          reduce using rule 34 (binary_op -> MUL .)
    STRING          reduce using rule 34 (binary_op -> MUL .)
    LPAREN          reduce using rule 34 (binary_op -> MUL .)


state 40

    (35) binary_op -> DIV .

    ID              reduce using rule 35 (binary_op -> DIV .)
    SELF            reduce using rule 35 (binary_op -> DIV .)
    NUMBER          reduce using rule 35 (binary_op -> DIV .)
    STRING          reduce using rule 35 (binary_op -> DIV .)
    LPAREN          reduce using rule 35 (binary_op -> DIV .)


state 41

    (25) expr -> ID LPAREN . arg_list RPAREN
    (24) term -> ID LPAREN . arg_list RPAREN
    (36) arg_list -> .
    (37) arg_list -> . expr COMMA arg_list
    (38) arg_list -> . expr
    (22) expr -> . expr binary_op expr
    (23) expr -> . term
    (25) expr -> . ID LPAREN arg_list RPAREN
    (24) term -> . ID LPAREN arg_list RPAREN
    (26) term -> . SELF DOT ID
    (27) term -> . ID DOT ID
    (28) term -> . ID
    (29) term -> . NUMBER
    (30) term -> . STRING
    (31) term -> . LPAREN expr RPAREN

    RPAREN          reduce using rule 36 (arg_list -> .)
    ID              shift and go to state 22
    SELF            shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    LPAREN          shift and go to state 23

    arg_list                       shift and go to state 57
    expr                           shift and go to state 32
    term                           shift and go to state 21

state 42

    (27) term -> ID DOT . ID

    ID              shift and go to state 58


state 43

    (31) term -> LPAREN expr . RPAREN
    (22) expr -> expr . binary_op expr
    (32) binary_op -> . PLUS
    (33) binary_op -> . MINUS
    (34) binary_op -> . MUL
    (35) binary_op -> . DIV

    RPAREN          shift and go to state 59
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MUL             shift and go to state 39
    DIV             shift and go to state 40

    binary_op                      shift and go to state 36

state 44

    (26) term -> SELF DOT . ID

    ID              shift and go to state 60


state 45

    (4) stmt -> CLASS ID COLON NEWLINE . block
    (39) block -> . INDENT stmt_list DEDENT

    INDENT          shift and go to state 62

    block                          shift and go to state 61

state 46

    (6) stmt -> ID EQUALS expr NEWLINE .

    CLASS           reduce using rule 6 (stmt -> ID EQUALS expr NEWLINE .)
    DEF             reduce using rule 6 (stmt -> ID EQUALS expr NEWLINE .)
    ID              reduce using rule 6 (stmt -> ID EQUALS expr NEWLINE .)
    SELF            reduce using rule 6 (stmt -> ID EQUALS expr NEWLINE .)
    RETURN          reduce using rule 6 (stmt -> ID EQUALS expr NEWLINE .)
    PASS            reduce using rule 6 (stmt -> ID EQUALS expr NEWLINE .)
    $end            reduce using rule 6 (stmt -> ID EQUALS expr NEWLINE .)
    DEDENT          reduce using rule 6 (stmt -> ID EQUALS expr NEWLINE .)


state 47

    (7) stmt -> ID DOT ID EQUALS . expr NEWLINE
    (22) expr -> . expr binary_op expr
    (23) expr -> . term
    (25) expr -> . ID LPAREN arg_list RPAREN
    (24) term -> . ID LPAREN arg_list RPAREN
    (26) term -> . SELF DOT ID
    (27) term -> . ID DOT ID
    (28) term -> . ID
    (29) term -> . NUMBER
    (30) term -> . STRING
    (31) term -> . LPAREN expr RPAREN

    ID              shift and go to state 22
    SELF            shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    LPAREN          shift and go to state 23

    expr                           shift and go to state 63
    term                           shift and go to state 21

state 48

    (9) stmt -> ID DOT ID LPAREN . arg_list RPAREN NEWLINE
    (36) arg_list -> .
    (37) arg_list -> . expr COMMA arg_list
    (38) arg_list -> . expr
    (22) expr -> . expr binary_op expr
    (23) expr -> . term
    (25) expr -> . ID LPAREN arg_list RPAREN
    (24) term -> . ID LPAREN arg_list RPAREN
    (26) term -> . SELF DOT ID
    (27) term -> . ID DOT ID
    (28) term -> . ID
    (29) term -> . NUMBER
    (30) term -> . STRING
    (31) term -> . LPAREN expr RPAREN

    RPAREN          reduce using rule 36 (arg_list -> .)
    ID              shift and go to state 22
    SELF            shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    LPAREN          shift and go to state 23

    arg_list                       shift and go to state 64
    expr                           shift and go to state 32
    term                           shift and go to state 21

state 49

    (10) stmt -> ID LPAREN arg_list RPAREN . NEWLINE

    NEWLINE         shift and go to state 65


state 50

    (37) arg_list -> expr COMMA . arg_list
    (36) arg_list -> .
    (37) arg_list -> . expr COMMA arg_list
    (38) arg_list -> . expr
    (22) expr -> . expr binary_op expr
    (23) expr -> . term
    (25) expr -> . ID LPAREN arg_list RPAREN
    (24) term -> . ID LPAREN arg_list RPAREN
    (26) term -> . SELF DOT ID
    (27) term -> . ID DOT ID
    (28) term -> . ID
    (29) term -> . NUMBER
    (30) term -> . STRING
    (31) term -> . LPAREN expr RPAREN

    RPAREN          reduce using rule 36 (arg_list -> .)
    ID              shift and go to state 22
    SELF            shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    LPAREN          shift and go to state 23

    expr                           shift and go to state 32
    arg_list                       shift and go to state 66
    term                           shift and go to state 21

state 51

    (5) stmt -> DEF method_name LPAREN param_list . RPAREN COLON NEWLINE block

    RPAREN          shift and go to state 67


state 52

    (17) param_list -> SELF .
    (18) param_list -> SELF . COMMA params

    RPAREN          reduce using rule 17 (param_list -> SELF .)
    COMMA           shift and go to state 68


state 53

    (19) param_list -> params .

    RPAREN          reduce using rule 19 (param_list -> params .)


state 54

    (20) params -> ID . COMMA params
    (21) params -> ID .

    COMMA           shift and go to state 69
    RPAREN          reduce using rule 21 (params -> ID .)


state 55

    (8) stmt -> SELF DOT ID EQUALS . expr NEWLINE
    (22) expr -> . expr binary_op expr
    (23) expr -> . term
    (25) expr -> . ID LPAREN arg_list RPAREN
    (24) term -> . ID LPAREN arg_list RPAREN
    (26) term -> . SELF DOT ID
    (27) term -> . ID DOT ID
    (28) term -> . ID
    (29) term -> . NUMBER
    (30) term -> . STRING
    (31) term -> . LPAREN expr RPAREN

    ID              shift and go to state 22
    SELF            shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    LPAREN          shift and go to state 23

    expr                           shift and go to state 70
    term                           shift and go to state 21

state 56

    (22) expr -> expr binary_op expr .
    (22) expr -> expr . binary_op expr
    (32) binary_op -> . PLUS
    (33) binary_op -> . MINUS
    (34) binary_op -> . MUL
    (35) binary_op -> . DIV

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    NEWLINE         reduce using rule 22 (expr -> expr binary_op expr .)
    COMMA           reduce using rule 22 (expr -> expr binary_op expr .)
    RPAREN          reduce using rule 22 (expr -> expr binary_op expr .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MUL             shift and go to state 39
    DIV             shift and go to state 40

  ! PLUS            [ reduce using rule 22 (expr -> expr binary_op expr .) ]
  ! MINUS           [ reduce using rule 22 (expr -> expr binary_op expr .) ]
  ! MUL             [ reduce using rule 22 (expr -> expr binary_op expr .) ]
  ! DIV             [ reduce using rule 22 (expr -> expr binary_op expr .) ]

    binary_op                      shift and go to state 36

state 57

    (25) expr -> ID LPAREN arg_list . RPAREN
    (24) term -> ID LPAREN arg_list . RPAREN

    RPAREN          shift and go to state 71


state 58

    (27) term -> ID DOT ID .

    NEWLINE         reduce using rule 27 (term -> ID DOT ID .)
    PLUS            reduce using rule 27 (term -> ID DOT ID .)
    MINUS           reduce using rule 27 (term -> ID DOT ID .)
    MUL             reduce using rule 27 (term -> ID DOT ID .)
    DIV             reduce using rule 27 (term -> ID DOT ID .)
    COMMA           reduce using rule 27 (term -> ID DOT ID .)
    RPAREN          reduce using rule 27 (term -> ID DOT ID .)


state 59

    (31) term -> LPAREN expr RPAREN .

    NEWLINE         reduce using rule 31 (term -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 31 (term -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 31 (term -> LPAREN expr RPAREN .)
    MUL             reduce using rule 31 (term -> LPAREN expr RPAREN .)
    DIV             reduce using rule 31 (term -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 31 (term -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 31 (term -> LPAREN expr RPAREN .)


state 60

    (26) term -> SELF DOT ID .

    NEWLINE         reduce using rule 26 (term -> SELF DOT ID .)
    PLUS            reduce using rule 26 (term -> SELF DOT ID .)
    MINUS           reduce using rule 26 (term -> SELF DOT ID .)
    MUL             reduce using rule 26 (term -> SELF DOT ID .)
    DIV             reduce using rule 26 (term -> SELF DOT ID .)
    COMMA           reduce using rule 26 (term -> SELF DOT ID .)
    RPAREN          reduce using rule 26 (term -> SELF DOT ID .)


state 61

    (4) stmt -> CLASS ID COLON NEWLINE block .

    CLASS           reduce using rule 4 (stmt -> CLASS ID COLON NEWLINE block .)
    DEF             reduce using rule 4 (stmt -> CLASS ID COLON NEWLINE block .)
    ID              reduce using rule 4 (stmt -> CLASS ID COLON NEWLINE block .)
    SELF            reduce using rule 4 (stmt -> CLASS ID COLON NEWLINE block .)
    RETURN          reduce using rule 4 (stmt -> CLASS ID COLON NEWLINE block .)
    PASS            reduce using rule 4 (stmt -> CLASS ID COLON NEWLINE block .)
    $end            reduce using rule 4 (stmt -> CLASS ID COLON NEWLINE block .)
    DEDENT          reduce using rule 4 (stmt -> CLASS ID COLON NEWLINE block .)


state 62

    (39) block -> INDENT . stmt_list DEDENT
    (2) stmt_list -> . stmt stmt_list
    (3) stmt_list -> . stmt
    (4) stmt -> . CLASS ID COLON NEWLINE block
    (5) stmt -> . DEF method_name LPAREN param_list RPAREN COLON NEWLINE block
    (6) stmt -> . ID EQUALS expr NEWLINE
    (7) stmt -> . ID DOT ID EQUALS expr NEWLINE
    (8) stmt -> . SELF DOT ID EQUALS expr NEWLINE
    (9) stmt -> . ID DOT ID LPAREN arg_list RPAREN NEWLINE
    (10) stmt -> . ID LPAREN arg_list RPAREN NEWLINE
    (11) stmt -> . RETURN expr NEWLINE
    (12) stmt -> . RETURN NEWLINE
    (13) stmt -> . PASS NEWLINE

    CLASS           shift and go to state 4
    DEF             shift and go to state 6
    ID              shift and go to state 5
    SELF            shift and go to state 7
    RETURN          shift and go to state 8
    PASS            shift and go to state 9

    stmt_list                      shift and go to state 72
    stmt                           shift and go to state 3

state 63

    (7) stmt -> ID DOT ID EQUALS expr . NEWLINE
    (22) expr -> expr . binary_op expr
    (32) binary_op -> . PLUS
    (33) binary_op -> . MINUS
    (34) binary_op -> . MUL
    (35) binary_op -> . DIV

    NEWLINE         shift and go to state 73
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MUL             shift and go to state 39
    DIV             shift and go to state 40

    binary_op                      shift and go to state 36

state 64

    (9) stmt -> ID DOT ID LPAREN arg_list . RPAREN NEWLINE

    RPAREN          shift and go to state 74


state 65

    (10) stmt -> ID LPAREN arg_list RPAREN NEWLINE .

    CLASS           reduce using rule 10 (stmt -> ID LPAREN arg_list RPAREN NEWLINE .)
    DEF             reduce using rule 10 (stmt -> ID LPAREN arg_list RPAREN NEWLINE .)
    ID              reduce using rule 10 (stmt -> ID LPAREN arg_list RPAREN NEWLINE .)
    SELF            reduce using rule 10 (stmt -> ID LPAREN arg_list RPAREN NEWLINE .)
    RETURN          reduce using rule 10 (stmt -> ID LPAREN arg_list RPAREN NEWLINE .)
    PASS            reduce using rule 10 (stmt -> ID LPAREN arg_list RPAREN NEWLINE .)
    $end            reduce using rule 10 (stmt -> ID LPAREN arg_list RPAREN NEWLINE .)
    DEDENT          reduce using rule 10 (stmt -> ID LPAREN arg_list RPAREN NEWLINE .)


state 66

    (37) arg_list -> expr COMMA arg_list .

    RPAREN          reduce using rule 37 (arg_list -> expr COMMA arg_list .)


state 67

    (5) stmt -> DEF method_name LPAREN param_list RPAREN . COLON NEWLINE block

    COLON           shift and go to state 75


state 68

    (18) param_list -> SELF COMMA . params
    (20) params -> . ID COMMA params
    (21) params -> . ID

    ID              shift and go to state 54

    params                         shift and go to state 76

state 69

    (20) params -> ID COMMA . params
    (20) params -> . ID COMMA params
    (21) params -> . ID

    ID              shift and go to state 54

    params                         shift and go to state 77

state 70

    (8) stmt -> SELF DOT ID EQUALS expr . NEWLINE
    (22) expr -> expr . binary_op expr
    (32) binary_op -> . PLUS
    (33) binary_op -> . MINUS
    (34) binary_op -> . MUL
    (35) binary_op -> . DIV

    NEWLINE         shift and go to state 78
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    MUL             shift and go to state 39
    DIV             shift and go to state 40

    binary_op                      shift and go to state 36

state 71

    (25) expr -> ID LPAREN arg_list RPAREN .
    (24) term -> ID LPAREN arg_list RPAREN .

  ! reduce/reduce conflict for NEWLINE resolved using rule 24 (term -> ID LPAREN arg_list RPAREN .)
  ! reduce/reduce conflict for PLUS resolved using rule 24 (term -> ID LPAREN arg_list RPAREN .)
  ! reduce/reduce conflict for MINUS resolved using rule 24 (term -> ID LPAREN arg_list RPAREN .)
  ! reduce/reduce conflict for MUL resolved using rule 24 (term -> ID LPAREN arg_list RPAREN .)
  ! reduce/reduce conflict for DIV resolved using rule 24 (term -> ID LPAREN arg_list RPAREN .)
  ! reduce/reduce conflict for COMMA resolved using rule 24 (term -> ID LPAREN arg_list RPAREN .)
  ! reduce/reduce conflict for RPAREN resolved using rule 24 (term -> ID LPAREN arg_list RPAREN .)
    NEWLINE         reduce using rule 24 (term -> ID LPAREN arg_list RPAREN .)
    PLUS            reduce using rule 24 (term -> ID LPAREN arg_list RPAREN .)
    MINUS           reduce using rule 24 (term -> ID LPAREN arg_list RPAREN .)
    MUL             reduce using rule 24 (term -> ID LPAREN arg_list RPAREN .)
    DIV             reduce using rule 24 (term -> ID LPAREN arg_list RPAREN .)
    COMMA           reduce using rule 24 (term -> ID LPAREN arg_list RPAREN .)
    RPAREN          reduce using rule 24 (term -> ID LPAREN arg_list RPAREN .)

  ! NEWLINE         [ reduce using rule 25 (expr -> ID LPAREN arg_list RPAREN .) ]
  ! PLUS            [ reduce using rule 25 (expr -> ID LPAREN arg_list RPAREN .) ]
  ! MINUS           [ reduce using rule 25 (expr -> ID LPAREN arg_list RPAREN .) ]
  ! MUL             [ reduce using rule 25 (expr -> ID LPAREN arg_list RPAREN .) ]
  ! DIV             [ reduce using rule 25 (expr -> ID LPAREN arg_list RPAREN .) ]
  ! COMMA           [ reduce using rule 25 (expr -> ID LPAREN arg_list RPAREN .) ]
  ! RPAREN          [ reduce using rule 25 (expr -> ID LPAREN arg_list RPAREN .) ]


state 72

    (39) block -> INDENT stmt_list . DEDENT

    DEDENT          shift and go to state 79


state 73

    (7) stmt -> ID DOT ID EQUALS expr NEWLINE .

    CLASS           reduce using rule 7 (stmt -> ID DOT ID EQUALS expr NEWLINE .)
    DEF             reduce using rule 7 (stmt -> ID DOT ID EQUALS expr NEWLINE .)
    ID              reduce using rule 7 (stmt -> ID DOT ID EQUALS expr NEWLINE .)
    SELF            reduce using rule 7 (stmt -> ID DOT ID EQUALS expr NEWLINE .)
    RETURN          reduce using rule 7 (stmt -> ID DOT ID EQUALS expr NEWLINE .)
    PASS            reduce using rule 7 (stmt -> ID DOT ID EQUALS expr NEWLINE .)
    $end            reduce using rule 7 (stmt -> ID DOT ID EQUALS expr NEWLINE .)
    DEDENT          reduce using rule 7 (stmt -> ID DOT ID EQUALS expr NEWLINE .)


state 74

    (9) stmt -> ID DOT ID LPAREN arg_list RPAREN . NEWLINE

    NEWLINE         shift and go to state 80


state 75

    (5) stmt -> DEF method_name LPAREN param_list RPAREN COLON . NEWLINE block

    NEWLINE         shift and go to state 81


state 76

    (18) param_list -> SELF COMMA params .

    RPAREN          reduce using rule 18 (param_list -> SELF COMMA params .)


state 77

    (20) params -> ID COMMA params .

    RPAREN          reduce using rule 20 (params -> ID COMMA params .)


state 78

    (8) stmt -> SELF DOT ID EQUALS expr NEWLINE .

    CLASS           reduce using rule 8 (stmt -> SELF DOT ID EQUALS expr NEWLINE .)
    DEF             reduce using rule 8 (stmt -> SELF DOT ID EQUALS expr NEWLINE .)
    ID              reduce using rule 8 (stmt -> SELF DOT ID EQUALS expr NEWLINE .)
    SELF            reduce using rule 8 (stmt -> SELF DOT ID EQUALS expr NEWLINE .)
    RETURN          reduce using rule 8 (stmt -> SELF DOT ID EQUALS expr NEWLINE .)
    PASS            reduce using rule 8 (stmt -> SELF DOT ID EQUALS expr NEWLINE .)
    $end            reduce using rule 8 (stmt -> SELF DOT ID EQUALS expr NEWLINE .)
    DEDENT          reduce using rule 8 (stmt -> SELF DOT ID EQUALS expr NEWLINE .)


state 79

    (39) block -> INDENT stmt_list DEDENT .

    CLASS           reduce using rule 39 (block -> INDENT stmt_list DEDENT .)
    DEF             reduce using rule 39 (block -> INDENT stmt_list DEDENT .)
    ID              reduce using rule 39 (block -> INDENT stmt_list DEDENT .)
    SELF            reduce using rule 39 (block -> INDENT stmt_list DEDENT .)
    RETURN          reduce using rule 39 (block -> INDENT stmt_list DEDENT .)
    PASS            reduce using rule 39 (block -> INDENT stmt_list DEDENT .)
    $end            reduce using rule 39 (block -> INDENT stmt_list DEDENT .)
    DEDENT          reduce using rule 39 (block -> INDENT stmt_list DEDENT .)


state 80

    (9) stmt -> ID DOT ID LPAREN arg_list RPAREN NEWLINE .

    CLASS           reduce using rule 9 (stmt -> ID DOT ID LPAREN arg_list RPAREN NEWLINE .)
    DEF             reduce using rule 9 (stmt -> ID DOT ID LPAREN arg_list RPAREN NEWLINE .)
    ID              reduce using rule 9 (stmt -> ID DOT ID LPAREN arg_list RPAREN NEWLINE .)
    SELF            reduce using rule 9 (stmt -> ID DOT ID LPAREN arg_list RPAREN NEWLINE .)
    RETURN          reduce using rule 9 (stmt -> ID DOT ID LPAREN arg_list RPAREN NEWLINE .)
    PASS            reduce using rule 9 (stmt -> ID DOT ID LPAREN arg_list RPAREN NEWLINE .)
    $end            reduce using rule 9 (stmt -> ID DOT ID LPAREN arg_list RPAREN NEWLINE .)
    DEDENT          reduce using rule 9 (stmt -> ID DOT ID LPAREN arg_list RPAREN NEWLINE .)


state 81

    (5) stmt -> DEF method_name LPAREN param_list RPAREN COLON NEWLINE . block
    (39) block -> . INDENT stmt_list DEDENT

    INDENT          shift and go to state 62

    block                          shift and go to state 82

state 82

    (5) stmt -> DEF method_name LPAREN param_list RPAREN COLON NEWLINE block .

    CLASS           reduce using rule 5 (stmt -> DEF method_name LPAREN param_list RPAREN COLON NEWLINE block .)
    DEF             reduce using rule 5 (stmt -> DEF method_name LPAREN param_list RPAREN COLON NEWLINE block .)
    ID              reduce using rule 5 (stmt -> DEF method_name LPAREN param_list RPAREN COLON NEWLINE block .)
    SELF            reduce using rule 5 (stmt -> DEF method_name LPAREN param_list RPAREN COLON NEWLINE block .)
    RETURN          reduce using rule 5 (stmt -> DEF method_name LPAREN param_list RPAREN COLON NEWLINE block .)
    PASS            reduce using rule 5 (stmt -> DEF method_name LPAREN param_list RPAREN COLON NEWLINE block .)
    $end            reduce using rule 5 (stmt -> DEF method_name LPAREN param_list RPAREN COLON NEWLINE block .)
    DEDENT          reduce using rule 5 (stmt -> DEF method_name LPAREN param_list RPAREN COLON NEWLINE block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MUL in state 56 resolved as shift
WARNING: shift/reduce conflict for DIV in state 56 resolved as shift
WARNING: reduce/reduce conflict in state 71 resolved using rule (term -> ID LPAREN arg_list RPAREN)
WARNING: rejected rule (expr -> ID LPAREN arg_list RPAREN) in state 71
WARNING: Rule (expr -> ID LPAREN arg_list RPAREN) is never reduced
