
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CLASS COLON COMMA DEF DIVIDE DOT ELSE EQ EQ_OP FROM GT ID IF IMPORT LPAREN LT MINUS NE NEWLINE NOT NUM OR PASS PLUS RETURN RPAREN STR TIMES WHILEprogram : stmt\n               | program stmtstmt : CLASS ID LPAREN ID RPAREN COLON block\n            | CLASS ID COLON block\n            | DEF ID LPAREN params RPAREN COLON block\n            | DEF ID LPAREN RPAREN COLON block\n            | IMPORT import_path\n            | FROM ID IMPORT ID\n            | RETURN expr\n            | RETURN\n            | PASS\n            | IF expr COLON block ELSE COLON block\n            | IF expr COLON block\n            | WHILE expr COLON block\n            | target EQ_OP expr\n            | exprblock : NEWLINE programparams : ID\n              | params COMMA IDimport_path : ID\n                   | import_path DOT IDexpr : term\n            | expr PLUS term\n            | expr MINUS term\n            | expr TIMES term\n            | expr DIVIDE term\n            | expr EQ term\n            | expr NE term\n            | expr LT term\n            | expr GT term\n            | expr AND term\n            | expr OR termterm : ID\n            | NUM\n            | STR\n            | LPAREN expr RPAREN\n            | NOT term\n            | MINUS term\n            | ID call_chaincall_chain : DOT ID\n                  | LPAREN args RPAREN\n                  | call_chain DOT ID\n                  | call_chain LPAREN args RPARENargs : expr\n            | args COMMA exprtarget : ID\n              | ID call_chain'
    
_lr_action_items = {'CLASS':([0,1,2,4,9,10,11,15,17,18,20,22,26,28,29,31,45,46,51,54,55,59,60,61,62,63,64,65,66,67,68,71,73,74,75,77,82,83,84,85,87,88,97,99,100,101,],[3,3,-1,-33,-10,-16,-11,-22,-34,-35,-2,-39,-33,-7,-20,-9,-38,-37,-40,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-15,-4,3,-42,-41,-21,-8,-13,-14,3,-43,-6,-3,-5,-12,]),'DEF':([0,1,2,4,9,10,11,15,17,18,20,22,26,28,29,31,45,46,51,54,55,59,60,61,62,63,64,65,66,67,68,71,73,74,75,77,82,83,84,85,87,88,97,99,100,101,],[6,6,-1,-33,-10,-16,-11,-22,-34,-35,-2,-39,-33,-7,-20,-9,-38,-37,-40,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-15,-4,6,-42,-41,-21,-8,-13,-14,6,-43,-6,-3,-5,-12,]),'IMPORT':([0,1,2,4,9,10,11,15,17,18,20,22,26,28,29,30,31,45,46,51,54,55,59,60,61,62,63,64,65,66,67,68,71,73,74,75,77,82,83,84,85,87,88,97,99,100,101,],[7,7,-1,-33,-10,-16,-11,-22,-34,-35,-2,-39,-33,-7,-20,58,-9,-38,-37,-40,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-15,-4,7,-42,-41,-21,-8,-13,-14,7,-43,-6,-3,-5,-12,]),'FROM':([0,1,2,4,9,10,11,15,17,18,20,22,26,28,29,31,45,46,51,54,55,59,60,61,62,63,64,65,66,67,68,71,73,74,75,77,82,83,84,85,87,88,97,99,100,101,],[8,8,-1,-33,-10,-16,-11,-22,-34,-35,-2,-39,-33,-7,-20,-9,-38,-37,-40,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-15,-4,8,-42,-41,-21,-8,-13,-14,8,-43,-6,-3,-5,-12,]),'RETURN':([0,1,2,4,9,10,11,15,17,18,20,22,26,28,29,31,45,46,51,54,55,59,60,61,62,63,64,65,66,67,68,71,73,74,75,77,82,83,84,85,87,88,97,99,100,101,],[9,9,-1,-33,-10,-16,-11,-22,-34,-35,-2,-39,-33,-7,-20,-9,-38,-37,-40,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-15,-4,9,-42,-41,-21,-8,-13,-14,9,-43,-6,-3,-5,-12,]),'PASS':([0,1,2,4,9,10,11,15,17,18,20,22,26,28,29,31,45,46,51,54,55,59,60,61,62,63,64,65,66,67,68,71,73,74,75,77,82,83,84,85,87,88,97,99,100,101,],[11,11,-1,-33,-10,-16,-11,-22,-34,-35,-2,-39,-33,-7,-20,-9,-38,-37,-40,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-15,-4,11,-42,-41,-21,-8,-13,-14,11,-43,-6,-3,-5,-12,]),'IF':([0,1,2,4,9,10,11,15,17,18,20,22,26,28,29,31,45,46,51,54,55,59,60,61,62,63,64,65,66,67,68,71,73,74,75,77,82,83,84,85,87,88,97,99,100,101,],[12,12,-1,-33,-10,-16,-11,-22,-34,-35,-2,-39,-33,-7,-20,-9,-38,-37,-40,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-15,-4,12,-42,-41,-21,-8,-13,-14,12,-43,-6,-3,-5,-12,]),'WHILE':([0,1,2,4,9,10,11,15,17,18,20,22,26,28,29,31,45,46,51,54,55,59,60,61,62,63,64,65,66,67,68,71,73,74,75,77,82,83,84,85,87,88,97,99,100,101,],[13,13,-1,-33,-10,-16,-11,-22,-34,-35,-2,-39,-33,-7,-20,-9,-38,-37,-40,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-15,-4,13,-42,-41,-21,-8,-13,-14,13,-43,-6,-3,-5,-12,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,22,23,24,26,28,29,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,49,50,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,73,74,75,77,78,82,83,84,85,87,88,91,97,99,100,101,],[4,4,-1,21,-33,26,27,29,30,26,-16,-11,26,26,-22,26,-34,-35,26,-2,-39,51,26,-33,-7,-20,-9,26,26,26,26,26,26,26,26,26,26,26,-38,-37,72,75,26,-40,-36,-39,79,82,83,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-15,-4,4,-42,-41,26,-21,-8,-13,-14,4,-43,96,-6,-3,-5,-12,]),'NUM':([0,1,2,4,5,9,10,11,12,13,15,16,17,18,19,20,22,24,26,28,29,31,32,33,34,35,36,37,38,39,40,41,44,45,46,50,51,54,55,59,60,61,62,63,64,65,66,67,68,71,73,74,75,77,78,82,83,84,85,87,88,97,99,100,101,],[17,17,-1,-33,17,17,-16,-11,17,17,-22,17,-34,-35,17,-2,-39,17,-33,-7,-20,-9,17,17,17,17,17,17,17,17,17,17,17,-38,-37,17,-40,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-15,-4,17,-42,-41,17,-21,-8,-13,-14,17,-43,-6,-3,-5,-12,]),'STR':([0,1,2,4,5,9,10,11,12,13,15,16,17,18,19,20,22,24,26,28,29,31,32,33,34,35,36,37,38,39,40,41,44,45,46,50,51,54,55,59,60,61,62,63,64,65,66,67,68,71,73,74,75,77,78,82,83,84,85,87,88,97,99,100,101,],[18,18,-1,-33,18,18,-16,-11,18,18,-22,18,-34,-35,18,-2,-39,18,-33,-7,-20,-9,18,18,18,18,18,18,18,18,18,18,18,-38,-37,18,-40,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-15,-4,18,-42,-41,18,-21,-8,-13,-14,18,-43,-6,-3,-5,-12,]),'LPAREN':([0,1,2,4,5,9,10,11,12,13,15,16,17,18,19,20,21,22,24,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,44,45,46,50,51,54,55,59,60,61,62,63,64,65,66,67,68,71,73,74,75,77,78,82,83,84,85,87,88,97,99,100,101,],[5,5,-1,24,5,5,-16,-11,5,5,-22,5,-34,-35,5,-2,47,50,5,24,56,-7,-20,-9,5,5,5,5,5,5,5,5,5,5,5,-38,-37,5,-40,-36,50,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-15,-4,5,-42,-41,5,-21,-8,-13,-14,5,-43,-6,-3,-5,-12,]),'NOT':([0,1,2,4,5,9,10,11,12,13,15,16,17,18,19,20,22,24,26,28,29,31,32,33,34,35,36,37,38,39,40,41,44,45,46,50,51,54,55,59,60,61,62,63,64,65,66,67,68,71,73,74,75,77,78,82,83,84,85,87,88,97,99,100,101,],[19,19,-1,-33,19,19,-16,-11,19,19,-22,19,-34,-35,19,-2,-39,19,-33,-7,-20,-9,19,19,19,19,19,19,19,19,19,19,19,-38,-37,19,-40,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-15,-4,19,-42,-41,19,-21,-8,-13,-14,19,-43,-6,-3,-5,-12,]),'MINUS':([0,1,2,4,5,9,10,11,12,13,15,16,17,18,19,20,22,24,25,26,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,53,54,55,59,60,61,62,63,64,65,66,67,68,71,73,74,75,77,78,82,83,84,85,87,88,89,97,99,100,101,],[16,16,-1,-33,16,16,33,-11,16,16,-22,16,-34,-35,16,-2,-39,16,33,-33,-7,-20,33,16,16,16,16,16,16,16,16,16,16,33,33,16,-38,-37,16,-40,33,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,33,-4,16,-42,-41,16,-21,-8,-13,-14,16,-43,33,-6,-3,-5,-12,]),'$end':([1,2,4,9,10,11,15,17,18,20,22,26,28,29,31,45,46,51,54,55,59,60,61,62,63,64,65,66,67,68,71,73,75,77,82,83,84,85,87,88,97,99,100,101,],[0,-1,-33,-10,-16,-11,-22,-34,-35,-2,-39,-33,-7,-20,-9,-38,-37,-40,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-15,-4,-42,-41,-21,-8,-13,-14,-17,-43,-6,-3,-5,-12,]),'ELSE':([2,4,9,10,11,15,17,18,20,22,26,28,29,31,45,46,51,54,55,59,60,61,62,63,64,65,66,67,68,71,73,75,77,82,83,84,85,87,88,97,99,100,101,],[-1,-33,-10,-16,-11,-22,-34,-35,-2,-39,-33,-7,-20,-9,-38,-37,-40,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-15,-4,-42,-41,-21,-8,93,-14,-17,-43,-6,-3,-5,-12,]),'EQ_OP':([4,14,22,51,75,77,88,],[-46,44,-47,-40,-42,-41,-43,]),'PLUS':([4,10,15,17,18,22,25,26,31,42,43,45,46,51,53,54,55,59,60,61,62,63,64,65,66,67,68,71,75,77,88,89,],[-33,32,-22,-34,-35,-39,32,-33,32,32,32,-38,-37,-40,32,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,32,-42,-41,-43,32,]),'TIMES':([4,10,15,17,18,22,25,26,31,42,43,45,46,51,53,54,55,59,60,61,62,63,64,65,66,67,68,71,75,77,88,89,],[-33,34,-22,-34,-35,-39,34,-33,34,34,34,-38,-37,-40,34,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,34,-42,-41,-43,34,]),'DIVIDE':([4,10,15,17,18,22,25,26,31,42,43,45,46,51,53,54,55,59,60,61,62,63,64,65,66,67,68,71,75,77,88,89,],[-33,35,-22,-34,-35,-39,35,-33,35,35,35,-38,-37,-40,35,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,35,-42,-41,-43,35,]),'EQ':([4,10,15,17,18,22,25,26,31,42,43,45,46,51,53,54,55,59,60,61,62,63,64,65,66,67,68,71,75,77,88,89,],[-33,36,-22,-34,-35,-39,36,-33,36,36,36,-38,-37,-40,36,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,36,-42,-41,-43,36,]),'NE':([4,10,15,17,18,22,25,26,31,42,43,45,46,51,53,54,55,59,60,61,62,63,64,65,66,67,68,71,75,77,88,89,],[-33,37,-22,-34,-35,-39,37,-33,37,37,37,-38,-37,-40,37,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,37,-42,-41,-43,37,]),'LT':([4,10,15,17,18,22,25,26,31,42,43,45,46,51,53,54,55,59,60,61,62,63,64,65,66,67,68,71,75,77,88,89,],[-33,38,-22,-34,-35,-39,38,-33,38,38,38,-38,-37,-40,38,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,38,-42,-41,-43,38,]),'GT':([4,10,15,17,18,22,25,26,31,42,43,45,46,51,53,54,55,59,60,61,62,63,64,65,66,67,68,71,75,77,88,89,],[-33,39,-22,-34,-35,-39,39,-33,39,39,39,-38,-37,-40,39,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,39,-42,-41,-43,39,]),'AND':([4,10,15,17,18,22,25,26,31,42,43,45,46,51,53,54,55,59,60,61,62,63,64,65,66,67,68,71,75,77,88,89,],[-33,40,-22,-34,-35,-39,40,-33,40,40,40,-38,-37,-40,40,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,40,-42,-41,-43,40,]),'OR':([4,10,15,17,18,22,25,26,31,42,43,45,46,51,53,54,55,59,60,61,62,63,64,65,66,67,68,71,75,77,88,89,],[-33,41,-22,-34,-35,-39,41,-33,41,41,41,-38,-37,-40,41,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,41,-42,-41,-43,41,]),'DOT':([4,22,26,28,29,51,55,75,77,82,88,],[23,49,23,57,-20,-40,49,-42,-41,-21,-43,]),'RPAREN':([15,17,18,25,26,45,46,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,72,75,76,77,79,80,88,89,96,],[-22,-34,-35,54,-33,-38,-37,-40,77,-44,-36,-39,81,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,86,-42,88,-41,-18,90,-43,-45,-19,]),'COLON':([15,17,18,21,26,42,43,45,46,51,54,55,59,60,61,62,63,64,65,66,67,68,75,77,81,86,88,90,93,],[-22,-34,-35,48,-33,69,70,-38,-37,-40,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-42,-41,92,94,-43,95,98,]),'COMMA':([15,17,18,26,45,46,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,75,76,77,79,80,88,89,96,],[-22,-34,-35,-33,-38,-37,-40,78,-44,-36,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-42,78,-41,-18,91,-43,-45,-19,]),'NEWLINE':([48,69,70,92,94,95,98,],[74,74,74,74,74,74,74,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,74,],[1,87,]),'stmt':([0,1,74,87,],[2,20,2,20,]),'expr':([0,1,5,9,12,13,24,44,50,74,78,87,],[10,10,25,31,42,43,53,71,53,10,89,10,]),'target':([0,1,74,87,],[14,14,14,14,]),'term':([0,1,5,9,12,13,16,19,24,32,33,34,35,36,37,38,39,40,41,44,50,74,78,87,],[15,15,15,15,15,15,45,46,15,59,60,61,62,63,64,65,66,67,68,15,15,15,15,15,]),'call_chain':([4,26,],[22,55,]),'import_path':([7,],[28,]),'args':([24,50,],[52,76,]),'block':([48,69,70,92,94,95,98,],[73,84,85,97,99,100,101,]),'params':([56,],[80,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt','program',1,'p_program','compiler.py',103),
  ('program -> program stmt','program',2,'p_program','compiler.py',104),
  ('stmt -> CLASS ID LPAREN ID RPAREN COLON block','stmt',7,'p_stmt','compiler.py',111),
  ('stmt -> CLASS ID COLON block','stmt',4,'p_stmt','compiler.py',112),
  ('stmt -> DEF ID LPAREN params RPAREN COLON block','stmt',7,'p_stmt','compiler.py',113),
  ('stmt -> DEF ID LPAREN RPAREN COLON block','stmt',6,'p_stmt','compiler.py',114),
  ('stmt -> IMPORT import_path','stmt',2,'p_stmt','compiler.py',115),
  ('stmt -> FROM ID IMPORT ID','stmt',4,'p_stmt','compiler.py',116),
  ('stmt -> RETURN expr','stmt',2,'p_stmt','compiler.py',117),
  ('stmt -> RETURN','stmt',1,'p_stmt','compiler.py',118),
  ('stmt -> PASS','stmt',1,'p_stmt','compiler.py',119),
  ('stmt -> IF expr COLON block ELSE COLON block','stmt',7,'p_stmt','compiler.py',120),
  ('stmt -> IF expr COLON block','stmt',4,'p_stmt','compiler.py',121),
  ('stmt -> WHILE expr COLON block','stmt',4,'p_stmt','compiler.py',122),
  ('stmt -> target EQ_OP expr','stmt',3,'p_stmt','compiler.py',123),
  ('stmt -> expr','stmt',1,'p_stmt','compiler.py',124),
  ('block -> NEWLINE program','block',2,'p_block','compiler.py',128),
  ('params -> ID','params',1,'p_params','compiler.py',132),
  ('params -> params COMMA ID','params',3,'p_params','compiler.py',133),
  ('import_path -> ID','import_path',1,'p_import_path','compiler.py',140),
  ('import_path -> import_path DOT ID','import_path',3,'p_import_path','compiler.py',141),
  ('expr -> term','expr',1,'p_expr','compiler.py',148),
  ('expr -> expr PLUS term','expr',3,'p_expr','compiler.py',149),
  ('expr -> expr MINUS term','expr',3,'p_expr','compiler.py',150),
  ('expr -> expr TIMES term','expr',3,'p_expr','compiler.py',151),
  ('expr -> expr DIVIDE term','expr',3,'p_expr','compiler.py',152),
  ('expr -> expr EQ term','expr',3,'p_expr','compiler.py',153),
  ('expr -> expr NE term','expr',3,'p_expr','compiler.py',154),
  ('expr -> expr LT term','expr',3,'p_expr','compiler.py',155),
  ('expr -> expr GT term','expr',3,'p_expr','compiler.py',156),
  ('expr -> expr AND term','expr',3,'p_expr','compiler.py',157),
  ('expr -> expr OR term','expr',3,'p_expr','compiler.py',158),
  ('term -> ID','term',1,'p_term','compiler.py',162),
  ('term -> NUM','term',1,'p_term','compiler.py',163),
  ('term -> STR','term',1,'p_term','compiler.py',164),
  ('term -> LPAREN expr RPAREN','term',3,'p_term','compiler.py',165),
  ('term -> NOT term','term',2,'p_term','compiler.py',166),
  ('term -> MINUS term','term',2,'p_term','compiler.py',167),
  ('term -> ID call_chain','term',2,'p_term','compiler.py',168),
  ('call_chain -> DOT ID','call_chain',2,'p_call_chain','compiler.py',172),
  ('call_chain -> LPAREN args RPAREN','call_chain',3,'p_call_chain','compiler.py',173),
  ('call_chain -> call_chain DOT ID','call_chain',3,'p_call_chain','compiler.py',174),
  ('call_chain -> call_chain LPAREN args RPAREN','call_chain',4,'p_call_chain','compiler.py',175),
  ('args -> expr','args',1,'p_args','compiler.py',179),
  ('args -> args COMMA expr','args',3,'p_args','compiler.py',180),
  ('target -> ID','target',1,'p_target','compiler.py',184),
  ('target -> ID call_chain','target',2,'p_target','compiler.py',185),
]
